name: Security and License Scans

on:
  pull_request: # TODO: _target:
    branches:
      - main

  push:
    branches:
      - main

  # Run every day at 5am UTC
  schedule:
    - cron: "0 5 * * *"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  fossa-scan:
    name: FOSSA Scanning Kickoff
    runs-on: ubuntu-latest
    outputs:
      fossaScanResults: ${{ steps.fossa_test.outputs.results }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: Run FOSSA Scan
        uses: fossas/fossa-action@main
        with:
          api-key: ${{ secrets.FOSSA_API_KEY }}

      - name: Run FOSSA Test
        id: fossa_test
        env:
          FOSSA_API_KEY: ${{ secrets.FOSSA_API_KEY }}
        run: |
          fossa test --format json | tee fossa-test.json 1>&2
          echo "results=$(cat fossa-test.json)" >> $GITHUB_OUTPUT

  fossa-security-check:
    name: FOSSA Security Check
    needs: fossa-scan
    runs-on: ubuntu-latest

    steps:
      - name: Check Security Issues
        run: |
          ISSUES=$(echo '${{ needs.fossa-scan.outputs.fossaScanResults }}' | jq '.issues | map(select(.type | IN("unlicensed_dependency", "policy_conflict", "policy_flag") | not))')
          ISSUES_LEN=$(echo $ISSUES | jq length)
          if [ $ISSUES_LEN -gt 0 ]; then
            echo "FOSSA Security Check failed"
            echo "Issues found:\n$ISSUES"
            cat fossa-test.json
            exit 1
          fi

  fossa-license-check:
    name: FOSSA Licenses Check
    needs: fossa-scan
    runs-on: ubuntu-latest

    steps:
      - name: Check License Issues
        run: |
          ISSUES=$(echo '${{ needs.fossa-scan.outputs.fossaScanResults }}' | jq '.issues | map(select(.type | IN("unlicensed_dependency", "policy_conflict", "policy_flag")))')
          ISSUES_LEN=$(echo $ISSUES | jq length)
          if [ $ISSUES_LEN -gt 0 ]; then
            echo "FOSSA License Check failed"
            echo "Issues found: $ISSUES"
            cat fossa-test.json
            exit 1
          fi
